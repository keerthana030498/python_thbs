Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5aa2a047-312e-4982-9a53-abe685ee55e3\" name=\"Changes\" comment=\"practice 4\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"keerthana030498 &lt;keerthana.va@gmail.com&gt;\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"lastFilter\": {\r\n    \"state\": \"OPEN\",\r\n    \"assignee\": \"keerthana030498\"\r\n  }\r\n}]]></component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/keerthana030498/python_thbs.git\",\r\n    \"accountId\": \"3a0a2f56-d958-4bdc-99b2-3729ce0e90ad\"\r\n  }\r\n}]]></component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2kS5l4xsQVvzCpRTXvhzuvhRyZk\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.Class Inheritance.executor\": \"Run\",\r\n    \"Python.Class and Instance Variables.executor\": \"Run\",\r\n    \"Python.Convert two lists into a dictionary.executor\": \"Run\",\r\n    \"Python.Create a Class with instance attributes.executor\": \"Run\",\r\n    \"Python.Create a Vehicle class without any variables and methods.executor\": \"Run\",\r\n    \"Python.Create a child class Bus that will inherit all of the variables and methods of the Vehicle class.executor\": \"Run\",\r\n    \"Python.Create a dictionary by extracting the keys from a given dictionary.executor\": \"Run\",\r\n    \"Python.Create a list of characters and their ASCII values.executor\": \"Run\",\r\n    \"Python.Create a list of characters that are digits from a string.executor\": \"Run\",\r\n    \"Python.Create a list of characters that are not alphanumeric from a string.executor\": \"Run\",\r\n    \"Python.Create a list of first characters from a list of words.executor\": \"Run\",\r\n    \"Python.Create a list of lowercase letters.executor\": \"Run\",\r\n    \"Python.Create a list of lowercase vowels from a string.executor\": \"Run\",\r\n    \"Python.Create a list of numbers where each number is doubled.executor\": \"Run\",\r\n    \"Python.Create a list of numbers with their absolute values.executor\": \"Run\",\r\n    \"Python.Create a list of numbers with their factorial values.executor\": \"Run\",\r\n    \"Python.Create a list of numbers with their reciprocal values.executor\": \"Run\",\r\n    \"Python.Create a list of numbers with their square roots.executor\": \"Run\",\r\n    \"Python.Create a list of reversed strings from another list.executor\": \"Run\",\r\n    \"Python.Create a list of squares of even numbers and cubes of odd numbers from -5 to 5.executor\": \"Run\",\r\n    \"Python.Create a list of strings with uppercase first letters.executor\": \"Run\",\r\n    \"Python.Create a list of strings with vowels replaced by asterisks.executor\": \"Run\",\r\n    \"Python.Create a list of uppercase words from a sentence.executor\": \"Run\",\r\n    \"Python.Create a list of words with their characters sorted.executor\": \"Run\",\r\n    \"Python.Create a list of words with their lengths from a sentence.executor\": \"Run\",\r\n    \"Python.Create a list of words with their lengths greater than 3 from a sentence.executor\": \"Run\",\r\n    \"Python.Define a property that must have the same value for every class instance (object).executor\": \"Run\",\r\n    \"Python.GCD.executor\": \"Run\",\r\n    \"Python.Generate a list of characters from a string.executor\": \"Run\",\r\n    \"Python.Generate a list of numbers that are palindromes from 1 to 100.executor\": \"Run\",\r\n    \"Python.Generate a list of numbers that are perfect squares from 1 to 100.executor\": \"Run\",\r\n    \"Python.Generate a list of numbers that are powers of 2 from 1 to 10.executor\": \"Run\",\r\n    \"Python.Generate a list of numbers with their signs reversed.executor\": \"Run\",\r\n    \"Python.Generate a list of pairs of numbers where the sum of each pair is prime.executor\": \"Run\",\r\n    \"Python.Generate a list of positive numbers from another list.executor\": \"Run\",\r\n    \"Python.Generate a list of prime numbers from 1 to 50.executor\": \"Run\",\r\n    \"Python.Generate a list of strings with their first letters removed.executor\": \"Run\",\r\n    \"Python.Generate a list of strings with their lengths from another list.executor\": \"Run\",\r\n    \"Python.Generate a list of strings with vowels removed.executor\": \"Run\",\r\n    \"Python.Generate a list of tuples containing numbers and their cubes.executor\": \"Run\",\r\n    \"Python.Generate a list of tuples containing numbers and their signs.executor\": \"Run\",\r\n    \"Python.Generate a list of tuples containing numbers and their squares if the number is prime.executor\": \"Run\",\r\n    \"Python.Generate a list of tuples containing numbers and their squares.executor\": \"Run\",\r\n    \"Python.Generate a list of tuples containing two numbers whose sum is even.executor\": \"Run\",\r\n    \"Python.Generate a list of uppercase letters.executor\": \"Run\",\r\n    \"Python.Initialize dictionary with default values.executor\": \"Run\",\r\n    \"Python.List of Even numbers from 1 to 20.executor\": \"Run\",\r\n    \"Python.List of Squares of numbers from 1 to 10.executor\": \"Run\",\r\n    \"Python.List of elements with their frequency in a list.executor\": \"Run\",\r\n    \"Python.List of numbers with their divisors.executor\": \"Run\",\r\n    \"Python.List of words with their first and last letter swapped.executor\": \"Run\",\r\n    \"Python.Merge two Python dictionaries into one.executor\": \"Run\",\r\n    \"Python.Print the value of key ‘history’ from the below dict.executor\": \"Run\",\r\n    \"Python.Removing whitespace from strings in a list.executor\": \"Run\",\r\n    \"Python.Reverse the tuple.executor\": \"Run\",\r\n    \"Python.Sort Python Dictionaries by Key or Value.executor\": \"Run\",\r\n    \"Python.Update set1 by adding items from set2.executor\": \"Run\",\r\n    \"Python.Write a Python program to count the number of characters (character frequency) in a string..executor\": \"Run\",\r\n    \"Python.Write a Python program to get a string from a given string where all occurrences of its first char have been changed to '@', except the first char itself..executor\": \"Run\",\r\n    \"Python.Write a Python program to remove punctuations from a given string..executor\": \"Run\",\r\n    \"Python.alpha pateern 2.executor\": \"Run\",\r\n    \"Python.alpha pattern.executor\": \"Run\",\r\n    \"Python.amstrong number.executor\": \"Run\",\r\n    \"Python.anagram.executor\": \"Run\",\r\n    \"Python.ate a list of numbers that are divisible by both 3 and 5 from 1 to 100.executor\": \"Run\",\r\n    \"Python.both max and min.executor\": \"Run\",\r\n    \"Python.calculate the length of a string..executor\": \"Run\",\r\n    \"Python.capatilize the first word.executor\": \"Run\",\r\n    \"Python.class creation.executor\": \"Run\",\r\n    \"Python.comma in a sentence.executor\": \"Run\",\r\n    \"Python.common elements.executor\": \"Run\",\r\n    \"Python.common multiples of 3 and 5 up to 100.executor\": \"Run\",\r\n    \"Python.count of substring.executor\": \"Run\",\r\n    \"Python.count repeated letters.executor\": \"Run\",\r\n    \"Python.even numbers squared and odd numbers cubed from 1 to 10.executor\": \"Run\",\r\n    \"Python.exponent(base, exp).executor\": \"Run\",\r\n    \"Python.fibonacci.executor\": \"Run\",\r\n    \"Python.full pyramid.executor\": \"Run\",\r\n    \"Python.half pyramid 1.executor\": \"Run\",\r\n    \"Python.half pyramid 2.executor\": \"Run\",\r\n    \"Python.half pyramid inverse.executor\": \"Run\",\r\n    \"Python.intersection_update().executor\": \"Run\",\r\n    \"Python.lc count cowels.executor\": \"Run\",\r\n    \"Python.lc to find even numbers that are divisible by 5..executor\": \"Run\",\r\n    \"Python.lc_even numbers.executor\": \"Run\",\r\n    \"Python.lc_evn or odd.executor\": \"Run\",\r\n    \"Python.list comprehension.executor\": \"Run\",\r\n    \"Python.list is empty..executor\": \"Run\",\r\n    \"Python.list of lengths of words in a sentence.executor\": \"Run\",\r\n    \"Python.list of numbers with their squares if the number is even.executor\": \"Run\",\r\n    \"Python.list of tuples containing a number and its square.executor\": \"Run\",\r\n    \"Python.list of tuples containing even and odd numbers from 1 to 10.executor\": \"Run\",\r\n    \"Python.list1.executor\": \"Run\",\r\n    \"Python.list2.executor\": \"Run\",\r\n    \"Python.list3.executor\": \"Run\",\r\n    \"Python.longest word in a given sentence.executor\": \"Run\",\r\n    \"Python.min and max list.executor\": \"Run\",\r\n    \"Python.min list.executor\": \"Run\",\r\n    \"Python.multiplication table..executor\": \"Run\",\r\n    \"Python.multiplication table.executor\": \"Run\",\r\n    \"Python.nuimeric pattern.executor\": \"Run\",\r\n    \"Python.occuerences.executor\": \"Run\",\r\n    \"Python.palindrome.executor\": \"Run\",\r\n    \"Python.perfect square.executor\": \"Run\",\r\n    \"Python.permutations.executor\": \"Run\",\r\n    \"Python.prime number.executor\": \"Run\",\r\n    \"Python.revers the number.executor\": \"Run\",\r\n    \"Python.second largest.executor\": \"Run\",\r\n    \"Python.set1.executor\": \"Run\",\r\n    \"Python.set2.executor\": \"Run\",\r\n    \"Python.set3.executor\": \"Run\",\r\n    \"Python.set4.executor\": \"Run\",\r\n    \"Python.set5.executor\": \"Run\",\r\n    \"Python.set6.executor\": \"Run\",\r\n    \"Python.set7.executor\": \"Run\",\r\n    \"Python.slicing.executor\": \"Run\",\r\n    \"Python.slicing2.executor\": \"Run\",\r\n    \"Python.sort array.executor\": \"Run\",\r\n    \"Python.string 10.executor\": \"Run\",\r\n    \"Python.string 8.executor\": \"Run\",\r\n    \"Python.string1.executor\": \"Run\",\r\n    \"Python.string2.executor\": \"Run\",\r\n    \"Python.string3.executor\": \"Run\",\r\n    \"Python.string4.executor\": \"Run\",\r\n    \"Python.string5.executor\": \"Run\",\r\n    \"Python.string6.executor\": \"Run\",\r\n    \"Python.string7.executor\": \"Run\",\r\n    \"Python.string9.executor\": \"Run\",\r\n    \"Python.to remove duplicates from a list..executor\": \"Run\",\r\n    \"Python.tuple10.executor\": \"Run\",\r\n    \"Python.tuple2.executor\": \"Run\",\r\n    \"Python.tuple3.executor\": \"Run\",\r\n    \"Python.tuple4.executor\": \"Run\",\r\n    \"Python.tuple5.executor\": \"Run\",\r\n    \"Python.tuple6.executor\": \"Run\",\r\n    \"Python.tuple7.executor\": \"Run\",\r\n    \"Python.tuple8.executor\": \"Run\",\r\n    \"Python.tuple9.executor\": \"Run\",\r\n    \"Python.upper casec count.executor\": \"Run\",\r\n    \"Python.vowels count.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\keerthana_annadurai\\PycharmProjects\\pythonProject\\src\\questions\\space\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-f5635417b835-31b6be0877a2-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.18968.29\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5aa2a047-312e-4982-9a53-abe685ee55e3\" name=\"Changes\" comment=\"\" />\r\n      <created>1723264286048</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1723264286048</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"practice 1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724827579084</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724827579084</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"practice 2\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724827760129</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724827760129</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"practice 3\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724922235033</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724922235033</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"practice 3\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725023338268</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725023338268</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"practice 4\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725023357861</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725023357861</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"practice 1\" />\r\n    <MESSAGE value=\"practice 2\" />\r\n    <MESSAGE value=\"practice 3\" />\r\n    <MESSAGE value=\"practice 4\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"practice 4\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/src/count_digits.py</url>\r\n          <line>1</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c9d9fd6cabe72832029226787e2b7664518f7a8e)
+++ b/.idea/workspace.xml	(date 1725033850402)
@@ -4,9 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="5aa2a047-312e-4982-9a53-abe685ee55e3" name="Changes" comment="practice 4">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-    </list>
+    <list default="true" id="5aa2a047-312e-4982-9a53-abe685ee55e3" name="Changes" comment="practice 4" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -19,26 +17,34 @@
       </list>
     </option>
   </component>
+  <component name="Git.Merge.Settings">
+    <option name="BRANCH" value="main" />
+  </component>
   <component name="Git.Settings">
     <option name="PREVIOUS_COMMIT_AUTHORS">
       <list>
         <option value="keerthana030498 &lt;keerthana.va@gmail.com&gt;" />
       </list>
+    </option>
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="main" />
+      </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
-  "lastFilter": {
-    "state": "OPEN",
-    "assignee": "keerthana030498"
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;keerthana030498&quot;
   }
-}]]></component>
-  <component name="GithubPullRequestsUISettings"><![CDATA[{
-  "selectedUrlAndAccountId": {
-    "url": "https://github.com/keerthana030498/python_thbs.git",
-    "accountId": "3a0a2f56-d958-4bdc-99b2-3729ce0e90ad"
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/keerthana030498/python_thbs.git&quot;,
+    &quot;accountId&quot;: &quot;3a0a2f56-d958-4bdc-99b2-3729ce0e90ad&quot;
   }
-}]]></component>
+}</component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 0
 }</component>
@@ -50,153 +56,153 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Python.Class Inheritance.executor": "Run",
-    "Python.Class and Instance Variables.executor": "Run",
-    "Python.Convert two lists into a dictionary.executor": "Run",
-    "Python.Create a Class with instance attributes.executor": "Run",
-    "Python.Create a Vehicle class without any variables and methods.executor": "Run",
-    "Python.Create a child class Bus that will inherit all of the variables and methods of the Vehicle class.executor": "Run",
-    "Python.Create a dictionary by extracting the keys from a given dictionary.executor": "Run",
-    "Python.Create a list of characters and their ASCII values.executor": "Run",
-    "Python.Create a list of characters that are digits from a string.executor": "Run",
-    "Python.Create a list of characters that are not alphanumeric from a string.executor": "Run",
-    "Python.Create a list of first characters from a list of words.executor": "Run",
-    "Python.Create a list of lowercase letters.executor": "Run",
-    "Python.Create a list of lowercase vowels from a string.executor": "Run",
-    "Python.Create a list of numbers where each number is doubled.executor": "Run",
-    "Python.Create a list of numbers with their absolute values.executor": "Run",
-    "Python.Create a list of numbers with their factorial values.executor": "Run",
-    "Python.Create a list of numbers with their reciprocal values.executor": "Run",
-    "Python.Create a list of numbers with their square roots.executor": "Run",
-    "Python.Create a list of reversed strings from another list.executor": "Run",
-    "Python.Create a list of squares of even numbers and cubes of odd numbers from -5 to 5.executor": "Run",
-    "Python.Create a list of strings with uppercase first letters.executor": "Run",
-    "Python.Create a list of strings with vowels replaced by asterisks.executor": "Run",
-    "Python.Create a list of uppercase words from a sentence.executor": "Run",
-    "Python.Create a list of words with their characters sorted.executor": "Run",
-    "Python.Create a list of words with their lengths from a sentence.executor": "Run",
-    "Python.Create a list of words with their lengths greater than 3 from a sentence.executor": "Run",
-    "Python.Define a property that must have the same value for every class instance (object).executor": "Run",
-    "Python.GCD.executor": "Run",
-    "Python.Generate a list of characters from a string.executor": "Run",
-    "Python.Generate a list of numbers that are palindromes from 1 to 100.executor": "Run",
-    "Python.Generate a list of numbers that are perfect squares from 1 to 100.executor": "Run",
-    "Python.Generate a list of numbers that are powers of 2 from 1 to 10.executor": "Run",
-    "Python.Generate a list of numbers with their signs reversed.executor": "Run",
-    "Python.Generate a list of pairs of numbers where the sum of each pair is prime.executor": "Run",
-    "Python.Generate a list of positive numbers from another list.executor": "Run",
-    "Python.Generate a list of prime numbers from 1 to 50.executor": "Run",
-    "Python.Generate a list of strings with their first letters removed.executor": "Run",
-    "Python.Generate a list of strings with their lengths from another list.executor": "Run",
-    "Python.Generate a list of strings with vowels removed.executor": "Run",
-    "Python.Generate a list of tuples containing numbers and their cubes.executor": "Run",
-    "Python.Generate a list of tuples containing numbers and their signs.executor": "Run",
-    "Python.Generate a list of tuples containing numbers and their squares if the number is prime.executor": "Run",
-    "Python.Generate a list of tuples containing numbers and their squares.executor": "Run",
-    "Python.Generate a list of tuples containing two numbers whose sum is even.executor": "Run",
-    "Python.Generate a list of uppercase letters.executor": "Run",
-    "Python.Initialize dictionary with default values.executor": "Run",
-    "Python.List of Even numbers from 1 to 20.executor": "Run",
-    "Python.List of Squares of numbers from 1 to 10.executor": "Run",
-    "Python.List of elements with their frequency in a list.executor": "Run",
-    "Python.List of numbers with their divisors.executor": "Run",
-    "Python.List of words with their first and last letter swapped.executor": "Run",
-    "Python.Merge two Python dictionaries into one.executor": "Run",
-    "Python.Print the value of key ‘history’ from the below dict.executor": "Run",
-    "Python.Removing whitespace from strings in a list.executor": "Run",
-    "Python.Reverse the tuple.executor": "Run",
-    "Python.Sort Python Dictionaries by Key or Value.executor": "Run",
-    "Python.Update set1 by adding items from set2.executor": "Run",
-    "Python.Write a Python program to count the number of characters (character frequency) in a string..executor": "Run",
-    "Python.Write a Python program to get a string from a given string where all occurrences of its first char have been changed to '@', except the first char itself..executor": "Run",
-    "Python.Write a Python program to remove punctuations from a given string..executor": "Run",
-    "Python.alpha pateern 2.executor": "Run",
-    "Python.alpha pattern.executor": "Run",
-    "Python.amstrong number.executor": "Run",
-    "Python.anagram.executor": "Run",
-    "Python.ate a list of numbers that are divisible by both 3 and 5 from 1 to 100.executor": "Run",
-    "Python.both max and min.executor": "Run",
-    "Python.calculate the length of a string..executor": "Run",
-    "Python.capatilize the first word.executor": "Run",
-    "Python.class creation.executor": "Run",
-    "Python.comma in a sentence.executor": "Run",
-    "Python.common elements.executor": "Run",
-    "Python.common multiples of 3 and 5 up to 100.executor": "Run",
-    "Python.count of substring.executor": "Run",
-    "Python.count repeated letters.executor": "Run",
-    "Python.even numbers squared and odd numbers cubed from 1 to 10.executor": "Run",
-    "Python.exponent(base, exp).executor": "Run",
-    "Python.fibonacci.executor": "Run",
-    "Python.full pyramid.executor": "Run",
-    "Python.half pyramid 1.executor": "Run",
-    "Python.half pyramid 2.executor": "Run",
-    "Python.half pyramid inverse.executor": "Run",
-    "Python.intersection_update().executor": "Run",
-    "Python.lc count cowels.executor": "Run",
-    "Python.lc to find even numbers that are divisible by 5..executor": "Run",
-    "Python.lc_even numbers.executor": "Run",
-    "Python.lc_evn or odd.executor": "Run",
-    "Python.list comprehension.executor": "Run",
-    "Python.list is empty..executor": "Run",
-    "Python.list of lengths of words in a sentence.executor": "Run",
-    "Python.list of numbers with their squares if the number is even.executor": "Run",
-    "Python.list of tuples containing a number and its square.executor": "Run",
-    "Python.list of tuples containing even and odd numbers from 1 to 10.executor": "Run",
-    "Python.list1.executor": "Run",
-    "Python.list2.executor": "Run",
-    "Python.list3.executor": "Run",
-    "Python.longest word in a given sentence.executor": "Run",
-    "Python.min and max list.executor": "Run",
-    "Python.min list.executor": "Run",
-    "Python.multiplication table..executor": "Run",
-    "Python.multiplication table.executor": "Run",
-    "Python.nuimeric pattern.executor": "Run",
-    "Python.occuerences.executor": "Run",
-    "Python.palindrome.executor": "Run",
-    "Python.perfect square.executor": "Run",
-    "Python.permutations.executor": "Run",
-    "Python.prime number.executor": "Run",
-    "Python.revers the number.executor": "Run",
-    "Python.second largest.executor": "Run",
-    "Python.set1.executor": "Run",
-    "Python.set2.executor": "Run",
-    "Python.set3.executor": "Run",
-    "Python.set4.executor": "Run",
-    "Python.set5.executor": "Run",
-    "Python.set6.executor": "Run",
-    "Python.set7.executor": "Run",
-    "Python.slicing.executor": "Run",
-    "Python.slicing2.executor": "Run",
-    "Python.sort array.executor": "Run",
-    "Python.string 10.executor": "Run",
-    "Python.string 8.executor": "Run",
-    "Python.string1.executor": "Run",
-    "Python.string2.executor": "Run",
-    "Python.string3.executor": "Run",
-    "Python.string4.executor": "Run",
-    "Python.string5.executor": "Run",
-    "Python.string6.executor": "Run",
-    "Python.string7.executor": "Run",
-    "Python.string9.executor": "Run",
-    "Python.to remove duplicates from a list..executor": "Run",
-    "Python.tuple10.executor": "Run",
-    "Python.tuple2.executor": "Run",
-    "Python.tuple3.executor": "Run",
-    "Python.tuple4.executor": "Run",
-    "Python.tuple5.executor": "Run",
-    "Python.tuple6.executor": "Run",
-    "Python.tuple7.executor": "Run",
-    "Python.tuple8.executor": "Run",
-    "Python.tuple9.executor": "Run",
-    "Python.upper casec count.executor": "Run",
-    "Python.vowels count.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "master",
-    "settings.editor.selected.configurable": "preferences.pluginManager"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Python.Class Inheritance.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Class and Instance Variables.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Convert two lists into a dictionary.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a Class with instance attributes.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a Vehicle class without any variables and methods.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a child class Bus that will inherit all of the variables and methods of the Vehicle class.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a dictionary by extracting the keys from a given dictionary.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of characters and their ASCII values.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of characters that are digits from a string.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of characters that are not alphanumeric from a string.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of first characters from a list of words.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of lowercase letters.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of lowercase vowels from a string.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of numbers where each number is doubled.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of numbers with their absolute values.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of numbers with their factorial values.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of numbers with their reciprocal values.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of numbers with their square roots.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of reversed strings from another list.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of squares of even numbers and cubes of odd numbers from -5 to 5.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of strings with uppercase first letters.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of strings with vowels replaced by asterisks.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of uppercase words from a sentence.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of words with their characters sorted.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of words with their lengths from a sentence.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Create a list of words with their lengths greater than 3 from a sentence.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Define a property that must have the same value for every class instance (object).executor&quot;: &quot;Run&quot;,
+    &quot;Python.GCD.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of characters from a string.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of numbers that are palindromes from 1 to 100.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of numbers that are perfect squares from 1 to 100.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of numbers that are powers of 2 from 1 to 10.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of numbers with their signs reversed.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of pairs of numbers where the sum of each pair is prime.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of positive numbers from another list.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of prime numbers from 1 to 50.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of strings with their first letters removed.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of strings with their lengths from another list.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of strings with vowels removed.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of tuples containing numbers and their cubes.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of tuples containing numbers and their signs.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of tuples containing numbers and their squares if the number is prime.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of tuples containing numbers and their squares.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of tuples containing two numbers whose sum is even.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Generate a list of uppercase letters.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Initialize dictionary with default values.executor&quot;: &quot;Run&quot;,
+    &quot;Python.List of Even numbers from 1 to 20.executor&quot;: &quot;Run&quot;,
+    &quot;Python.List of Squares of numbers from 1 to 10.executor&quot;: &quot;Run&quot;,
+    &quot;Python.List of elements with their frequency in a list.executor&quot;: &quot;Run&quot;,
+    &quot;Python.List of numbers with their divisors.executor&quot;: &quot;Run&quot;,
+    &quot;Python.List of words with their first and last letter swapped.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Merge two Python dictionaries into one.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Print the value of key ‘history’ from the below dict.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Removing whitespace from strings in a list.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Reverse the tuple.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Sort Python Dictionaries by Key or Value.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Update set1 by adding items from set2.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Write a Python program to count the number of characters (character frequency) in a string..executor&quot;: &quot;Run&quot;,
+    &quot;Python.Write a Python program to get a string from a given string where all occurrences of its first char have been changed to '@', except the first char itself..executor&quot;: &quot;Run&quot;,
+    &quot;Python.Write a Python program to remove punctuations from a given string..executor&quot;: &quot;Run&quot;,
+    &quot;Python.alpha pateern 2.executor&quot;: &quot;Run&quot;,
+    &quot;Python.alpha pattern.executor&quot;: &quot;Run&quot;,
+    &quot;Python.amstrong number.executor&quot;: &quot;Run&quot;,
+    &quot;Python.anagram.executor&quot;: &quot;Run&quot;,
+    &quot;Python.ate a list of numbers that are divisible by both 3 and 5 from 1 to 100.executor&quot;: &quot;Run&quot;,
+    &quot;Python.both max and min.executor&quot;: &quot;Run&quot;,
+    &quot;Python.calculate the length of a string..executor&quot;: &quot;Run&quot;,
+    &quot;Python.capatilize the first word.executor&quot;: &quot;Run&quot;,
+    &quot;Python.class creation.executor&quot;: &quot;Run&quot;,
+    &quot;Python.comma in a sentence.executor&quot;: &quot;Run&quot;,
+    &quot;Python.common elements.executor&quot;: &quot;Run&quot;,
+    &quot;Python.common multiples of 3 and 5 up to 100.executor&quot;: &quot;Run&quot;,
+    &quot;Python.count of substring.executor&quot;: &quot;Run&quot;,
+    &quot;Python.count repeated letters.executor&quot;: &quot;Run&quot;,
+    &quot;Python.even numbers squared and odd numbers cubed from 1 to 10.executor&quot;: &quot;Run&quot;,
+    &quot;Python.exponent(base, exp).executor&quot;: &quot;Run&quot;,
+    &quot;Python.fibonacci.executor&quot;: &quot;Run&quot;,
+    &quot;Python.full pyramid.executor&quot;: &quot;Run&quot;,
+    &quot;Python.half pyramid 1.executor&quot;: &quot;Run&quot;,
+    &quot;Python.half pyramid 2.executor&quot;: &quot;Run&quot;,
+    &quot;Python.half pyramid inverse.executor&quot;: &quot;Run&quot;,
+    &quot;Python.intersection_update().executor&quot;: &quot;Run&quot;,
+    &quot;Python.lc count cowels.executor&quot;: &quot;Run&quot;,
+    &quot;Python.lc to find even numbers that are divisible by 5..executor&quot;: &quot;Run&quot;,
+    &quot;Python.lc_even numbers.executor&quot;: &quot;Run&quot;,
+    &quot;Python.lc_evn or odd.executor&quot;: &quot;Run&quot;,
+    &quot;Python.list comprehension.executor&quot;: &quot;Run&quot;,
+    &quot;Python.list is empty..executor&quot;: &quot;Run&quot;,
+    &quot;Python.list of lengths of words in a sentence.executor&quot;: &quot;Run&quot;,
+    &quot;Python.list of numbers with their squares if the number is even.executor&quot;: &quot;Run&quot;,
+    &quot;Python.list of tuples containing a number and its square.executor&quot;: &quot;Run&quot;,
+    &quot;Python.list of tuples containing even and odd numbers from 1 to 10.executor&quot;: &quot;Run&quot;,
+    &quot;Python.list1.executor&quot;: &quot;Run&quot;,
+    &quot;Python.list2.executor&quot;: &quot;Run&quot;,
+    &quot;Python.list3.executor&quot;: &quot;Run&quot;,
+    &quot;Python.longest word in a given sentence.executor&quot;: &quot;Run&quot;,
+    &quot;Python.min and max list.executor&quot;: &quot;Run&quot;,
+    &quot;Python.min list.executor&quot;: &quot;Run&quot;,
+    &quot;Python.multiplication table..executor&quot;: &quot;Run&quot;,
+    &quot;Python.multiplication table.executor&quot;: &quot;Run&quot;,
+    &quot;Python.nuimeric pattern.executor&quot;: &quot;Run&quot;,
+    &quot;Python.occuerences.executor&quot;: &quot;Run&quot;,
+    &quot;Python.palindrome.executor&quot;: &quot;Run&quot;,
+    &quot;Python.perfect square.executor&quot;: &quot;Run&quot;,
+    &quot;Python.permutations.executor&quot;: &quot;Run&quot;,
+    &quot;Python.prime number.executor&quot;: &quot;Run&quot;,
+    &quot;Python.revers the number.executor&quot;: &quot;Run&quot;,
+    &quot;Python.second largest.executor&quot;: &quot;Run&quot;,
+    &quot;Python.set1.executor&quot;: &quot;Run&quot;,
+    &quot;Python.set2.executor&quot;: &quot;Run&quot;,
+    &quot;Python.set3.executor&quot;: &quot;Run&quot;,
+    &quot;Python.set4.executor&quot;: &quot;Run&quot;,
+    &quot;Python.set5.executor&quot;: &quot;Run&quot;,
+    &quot;Python.set6.executor&quot;: &quot;Run&quot;,
+    &quot;Python.set7.executor&quot;: &quot;Run&quot;,
+    &quot;Python.slicing.executor&quot;: &quot;Run&quot;,
+    &quot;Python.slicing2.executor&quot;: &quot;Run&quot;,
+    &quot;Python.sort array.executor&quot;: &quot;Run&quot;,
+    &quot;Python.string 10.executor&quot;: &quot;Run&quot;,
+    &quot;Python.string 8.executor&quot;: &quot;Run&quot;,
+    &quot;Python.string1.executor&quot;: &quot;Run&quot;,
+    &quot;Python.string2.executor&quot;: &quot;Run&quot;,
+    &quot;Python.string3.executor&quot;: &quot;Run&quot;,
+    &quot;Python.string4.executor&quot;: &quot;Run&quot;,
+    &quot;Python.string5.executor&quot;: &quot;Run&quot;,
+    &quot;Python.string6.executor&quot;: &quot;Run&quot;,
+    &quot;Python.string7.executor&quot;: &quot;Run&quot;,
+    &quot;Python.string9.executor&quot;: &quot;Run&quot;,
+    &quot;Python.to remove duplicates from a list..executor&quot;: &quot;Run&quot;,
+    &quot;Python.tuple10.executor&quot;: &quot;Run&quot;,
+    &quot;Python.tuple2.executor&quot;: &quot;Run&quot;,
+    &quot;Python.tuple3.executor&quot;: &quot;Run&quot;,
+    &quot;Python.tuple4.executor&quot;: &quot;Run&quot;,
+    &quot;Python.tuple5.executor&quot;: &quot;Run&quot;,
+    &quot;Python.tuple6.executor&quot;: &quot;Run&quot;,
+    &quot;Python.tuple7.executor&quot;: &quot;Run&quot;,
+    &quot;Python.tuple8.executor&quot;: &quot;Run&quot;,
+    &quot;Python.tuple9.executor&quot;: &quot;Run&quot;,
+    &quot;Python.upper casec count.executor&quot;: &quot;Run&quot;,
+    &quot;Python.vowels count.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Users\keerthana_annadurai\PycharmProjects\pythonProject\src\questions\space" />
